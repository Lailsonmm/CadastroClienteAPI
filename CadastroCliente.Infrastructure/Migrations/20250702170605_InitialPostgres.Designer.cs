// <auto-generated />
using System;
using CadastroCliente.Infrastructure.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace CadastroCliente.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250702170605_InitialPostgres")]
    partial class InitialPostgres
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CadastroCliente.Domain.Entities.Cliente", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CpfOuCnpj")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("EnderecoResidencial")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("EnderecoTrabalho")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("InformacoesAdicionais")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NomeCompleto")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("CadastroCliente.Domain.Entities.Emprestimo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("ClienteId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("DataContratacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("TaxaJurosMensal")
                        .HasColumnType("numeric");

                    b.Property<int>("TotalParcelas")
                        .HasColumnType("integer");

                    b.Property<decimal>("ValorOriginal")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.ToTable("Emprestimos");
                });

            modelBuilder.Entity("CadastroCliente.Domain.Entities.Pagamento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("DataPagamento")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("EmprestimoId")
                        .HasColumnType("uuid");

                    b.Property<decimal>("ValorPago")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("EmprestimoId");

                    b.ToTable("Pagamentos");
                });

            modelBuilder.Entity("CadastroCliente.Domain.Entities.Emprestimo", b =>
                {
                    b.HasOne("CadastroCliente.Domain.Entities.Cliente", "Cliente")
                        .WithMany("Emprestimos")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("CadastroCliente.Domain.Entities.Pagamento", b =>
                {
                    b.HasOne("CadastroCliente.Domain.Entities.Emprestimo", "Emprestimo")
                        .WithMany("Pagamentos")
                        .HasForeignKey("EmprestimoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Emprestimo");
                });

            modelBuilder.Entity("CadastroCliente.Domain.Entities.Cliente", b =>
                {
                    b.Navigation("Emprestimos");
                });

            modelBuilder.Entity("CadastroCliente.Domain.Entities.Emprestimo", b =>
                {
                    b.Navigation("Pagamentos");
                });
#pragma warning restore 612, 618
        }
    }
}
